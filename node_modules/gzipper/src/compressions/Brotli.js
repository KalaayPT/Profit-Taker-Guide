"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BrotliCompression = void 0;
var zlib_1 = __importDefault(require("zlib"));
var Compression_1 = require("./Compression");
var enums_1 = require("../enums");
/**
 * Brotli compression
 */
var BrotliCompression = /** @class */ (function (_super) {
    __extends(BrotliCompression, _super);
    /**
     * Creates an instance of BrotliCompression
     */
    function BrotliCompression(options) {
        var _this = _super.call(this, options) || this;
        _this.compressionName = enums_1.CompressionNames.BROTLI;
        _this.ext = enums_1.CompressionExtensions.BROTLI;
        return _this;
    }
    /**
     * Returns brotli compression instance in closure.
     */
    BrotliCompression.prototype.getCompression = function () {
        return zlib_1.default.createBrotliCompress({
            params: this.compressionOptions,
        });
    };
    /**
     * Returns human-readable brotli compression options info.
     */
    BrotliCompression.prototype.readableOptions = function () {
        return _super.prototype.readableOptions.call(this, this.getBrotliOptionName.bind(this));
    };
    /**
     * Build brotli options object [compressionOptions].
     */
    BrotliCompression.prototype.selectCompression = function () {
        var options = {};
        if (this.options.brotliParamMode !== undefined) {
            switch (this.options.brotliParamMode) {
                case 'text':
                    options[zlib_1.default.constants.BROTLI_PARAM_MODE] =
                        zlib_1.default.constants.BROTLI_MODE_TEXT;
                    break;
                case 'font':
                    options[zlib_1.default.constants.BROTLI_PARAM_MODE] =
                        zlib_1.default.constants.BROTLI_MODE_FONT;
                    break;
                case 'default':
                default:
                    options[zlib_1.default.constants.BROTLI_PARAM_MODE] =
                        zlib_1.default.constants.BROTLI_MODE_GENERIC;
                    break;
            }
        }
        if (this.options.brotliQuality !== undefined) {
            options[zlib_1.default.constants.BROTLI_PARAM_QUALITY] = this.options.brotliQuality;
        }
        if (this.options.brotliSizeHint !== undefined) {
            options[zlib_1.default.constants.BROTLI_PARAM_SIZE_HINT] =
                this.options.brotliSizeHint;
        }
        this.compressionOptions = options;
    };
    /**
     * Returns human-readable brotli option name.
     */
    BrotliCompression.prototype.getBrotliOptionName = function (index) {
        switch (parseInt(index)) {
            case zlib_1.default.constants.BROTLI_PARAM_MODE:
                return 'paramMode';
            case zlib_1.default.constants.BROTLI_PARAM_QUALITY:
                return 'quality';
            case zlib_1.default.constants.BROTLI_PARAM_SIZE_HINT:
                return 'sizeHint';
        }
    };
    return BrotliCompression;
}(Compression_1.Compression));
exports.BrotliCompression = BrotliCompression;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQnJvdGxpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXByZXNzaW9ucy9Ccm90bGkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsOENBQXdCO0FBRXhCLDZDQUE0QztBQUU1QyxrQ0FBbUU7QUFFbkU7O0dBRUc7QUFDSDtJQUF1QyxxQ0FBMEI7SUFHL0Q7O09BRUc7SUFDSCwyQkFBWSxPQUF3QjtRQUFwQyxZQUNFLGtCQUFNLE9BQU8sQ0FBQyxTQUNmO1FBUFEscUJBQWUsR0FBRyx3QkFBZ0IsQ0FBQyxNQUFNLENBQUM7UUFDMUMsU0FBRyxHQUFHLDZCQUFxQixDQUFDLE1BQU0sQ0FBQzs7SUFNNUMsQ0FBQztJQUVEOztPQUVHO0lBQ0gsMENBQWMsR0FBZDtRQUNFLE9BQU8sY0FBSSxDQUFDLG9CQUFvQixDQUFDO1lBQy9CLE1BQU0sRUFBRSxJQUFJLENBQUMsa0JBQWtCO1NBQ2hDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRDs7T0FFRztJQUNILDJDQUFlLEdBQWY7UUFDRSxPQUFPLGlCQUFNLGVBQWUsWUFBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7SUFDcEUsQ0FBQztJQUVEOztPQUVHO0lBQ08sNkNBQWlCLEdBQTNCO1FBQ0UsSUFBTSxPQUFPLEdBQWtCLEVBQUUsQ0FBQztRQUVsQyxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxLQUFLLFNBQVMsRUFBRTtZQUM5QyxRQUFRLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxFQUFFO2dCQUNwQyxLQUFLLE1BQU07b0JBQ1QsT0FBTyxDQUFDLGNBQUksQ0FBQyxTQUFTLENBQUMsaUJBQWlCLENBQUM7d0JBQ3ZDLGNBQUksQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUM7b0JBQ2xDLE1BQU07Z0JBRVIsS0FBSyxNQUFNO29CQUNULE9BQU8sQ0FBQyxjQUFJLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDO3dCQUN2QyxjQUFJLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDO29CQUNsQyxNQUFNO2dCQUVSLEtBQUssU0FBUyxDQUFDO2dCQUNmO29CQUNFLE9BQU8sQ0FBQyxjQUFJLENBQUMsU0FBUyxDQUFDLGlCQUFpQixDQUFDO3dCQUN2QyxjQUFJLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDO29CQUNyQyxNQUFNO2FBQ1Q7U0FDRjtRQUVELElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEtBQUssU0FBUyxFQUFFO1lBQzVDLE9BQU8sQ0FBQyxjQUFJLENBQUMsU0FBUyxDQUFDLG9CQUFvQixDQUFDLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUM7U0FDM0U7UUFFRCxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxLQUFLLFNBQVMsRUFBRTtZQUM3QyxPQUFPLENBQUMsY0FBSSxDQUFDLFNBQVMsQ0FBQyxzQkFBc0IsQ0FBQztnQkFDNUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUM7U0FDL0I7UUFDRCxJQUFJLENBQUMsa0JBQWtCLEdBQUcsT0FBTyxDQUFDO0lBQ3BDLENBQUM7SUFFRDs7T0FFRztJQUNPLCtDQUFtQixHQUE3QixVQUE4QixLQUFhO1FBQ3pDLFFBQVEsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3ZCLEtBQUssY0FBSSxDQUFDLFNBQVMsQ0FBQyxpQkFBaUI7Z0JBQ25DLE9BQU8sV0FBVyxDQUFDO1lBRXJCLEtBQUssY0FBSSxDQUFDLFNBQVMsQ0FBQyxvQkFBb0I7Z0JBQ3RDLE9BQU8sU0FBUyxDQUFDO1lBRW5CLEtBQUssY0FBSSxDQUFDLFNBQVMsQ0FBQyxzQkFBc0I7Z0JBQ3hDLE9BQU8sVUFBVSxDQUFDO1NBQ3JCO0lBQ0gsQ0FBQztJQUNILHdCQUFDO0FBQUQsQ0FBQyxBQTlFRCxDQUF1Qyx5QkFBVyxHQThFakQ7QUE5RVksOENBQWlCIn0=