"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GzipCompression = void 0;
var zlib_1 = __importDefault(require("zlib"));
var Compression_1 = require("./Compression");
var enums_1 = require("../enums");
/**
 * Gzip compression
 */
var GzipCompression = /** @class */ (function (_super) {
    __extends(GzipCompression, _super);
    /**
     * Creates an instance of GzipCompression.
     */
    function GzipCompression(options) {
        var _this = _super.call(this, options) || this;
        _this.compressionName = enums_1.CompressionNames.GZIP;
        _this.ext = enums_1.CompressionExtensions.GZIP;
        return _this;
    }
    /**
     * Returns gzip compression instance in closure.
     */
    GzipCompression.prototype.getCompression = function () {
        return zlib_1.default.createGzip(this.compressionOptions);
    };
    /**
     * Build deflate compression options object.
     */
    GzipCompression.prototype.selectCompression = function () {
        var options = {};
        if (this.options.gzipLevel !== undefined) {
            options.level = this.options.gzipLevel;
        }
        if (this.options.gzipMemoryLevel !== undefined) {
            options.memLevel = this.options.gzipMemoryLevel;
        }
        if (this.options.gzipStrategy !== undefined) {
            options.strategy = this.options.gzipStrategy;
        }
        this.compressionOptions = options;
    };
    return GzipCompression;
}(Compression_1.Compression));
exports.GzipCompression = GzipCompression;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3ppcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wcmVzc2lvbnMvR3ppcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSw4Q0FBd0I7QUFFeEIsNkNBQTRDO0FBRTVDLGtDQUFtRTtBQUVuRTs7R0FFRztBQUNIO0lBQXFDLG1DQUErQjtJQUdsRTs7T0FFRztJQUNILHlCQUFZLE9BQXdCO1FBQXBDLFlBQ0Usa0JBQU0sT0FBTyxDQUFDLFNBQ2Y7UUFQUSxxQkFBZSxHQUFHLHdCQUFnQixDQUFDLElBQUksQ0FBQztRQUN4QyxTQUFHLEdBQUcsNkJBQXFCLENBQUMsSUFBSSxDQUFDOztJQU0xQyxDQUFDO0lBRUQ7O09BRUc7SUFDSCx3Q0FBYyxHQUFkO1FBQ0UsT0FBTyxjQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFRDs7T0FFRztJQUNPLDJDQUFpQixHQUEzQjtRQUNFLElBQU0sT0FBTyxHQUF1QixFQUFFLENBQUM7UUFFdkMsSUFBSSxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsS0FBSyxTQUFTLEVBQUU7WUFDeEMsT0FBTyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQztTQUN4QztRQUVELElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLEtBQUssU0FBUyxFQUFFO1lBQzlDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUM7U0FDakQ7UUFFRCxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxLQUFLLFNBQVMsRUFBRTtZQUMzQyxPQUFPLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDO1NBQzlDO1FBRUQsSUFBSSxDQUFDLGtCQUFrQixHQUFHLE9BQU8sQ0FBQztJQUNwQyxDQUFDO0lBQ0gsc0JBQUM7QUFBRCxDQUFDLEFBckNELENBQXFDLHlCQUFXLEdBcUMvQztBQXJDWSwwQ0FBZSJ9